FROM python:3.12-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    ffmpeg \
    git \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt gunicorn

# Copy application code
COPY app/ ./app/
COPY __init__.py celery.conf ./

# Create directories for mounted volumes
RUN mkdir -p karaoke_library temp_downloads

# Make sure Python can find the modules
ENV PYTHONPATH=/app
ENV FLASK_APP=app/main.py
ENV FLASK_ENV=production

# Expose port
EXPOSE 5123

# Use gunicorn for production - suitable worker configuration for CPU-bound tasks
CMD ["gunicorn", "--workers=2", "--threads=4", "--bind=0.0.0.0:5123", "--log-level=info", "app.main:app"]